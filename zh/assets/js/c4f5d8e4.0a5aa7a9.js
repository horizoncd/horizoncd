"use strict";(self.webpackChunkhorizon_docs=self.webpackChunkhorizon_docs||[]).push([[193],{2841:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});var a=n(7294);n(7676);function r(){return a.createElement(a.Fragment,null,a.createElement("a",{id:"skip-to-content",href:"#content"},"Skip to the content."),a.createElement("header",{class:"page-header",role:"banner"},a.createElement("h1",{class:"project-name"},"Horizon"),a.createElement("a",{href:"https://github.com/horizoncd/horizon",class:"btn"},"View on GitHub"),a.createElement("a",{href:"/docs",class:"btn"},"Docs")),a.createElement("main",{id:"content",class:"main-content",role:"main"},a.createElement("p",null,"Horizon is a cloud-native application Continues Delivery (CD) platform. Platform team can let the developers  deploy their code to cloud and kubernetes easily, efficiency and with best practice. Horizon is inspired by ArgoCD and AWS Proton."),a.createElement("h2",{id:"why-horizon"},"Why Horizon"),a.createElement("ol",null,a.createElement("li",null,a.createElement("strong",null,"standardized"),":  kubernetes is flexible and powerful, but it is complex. it\u2019s hard to let all the developers have a comprehensive understanding of kubernetes and practice best practice. so horizon introduce  a template system to make the best practice under control, and also provide efficient delivery. For example, Platform Team can  provide basic spec of resource tiny(0.5core, 512MB)\u3001small(1core, 1GB), middle(2core, 4GB) etc. by default, not for the developer to select limit or request resource on common case."),a.createElement("li",null,a.createElement("strong",null,"security and reliable"),"\uff1asecurity and reliable is always a challenge. In Horizon, Horizon  make every change of application durable, reversible and auditable. It\u2019s done with our best practice of GitOps. And  Horizon introduce rbac&member system  to let you  have best practice on fine-grained  permission control."),a.createElement("li",null,a.createElement("strong",null,"multi-cloud"),": Horizon provide a consistent application platform to manage multi-cloud, hybrid cloud."),a.createElement("li",null,a.createElement("strong",null,"infrastructure agnostic"),"\uff1ahorizon doesn\u2019t limit the kind of workload. the basic kubernetes workloads and self defined ",a.createElement("a",{href:"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"},"CR")," are all supported."),a.createElement("li",null,a.createElement("strong",null,"efficiency"),"\uff1aplatform team can  quickly make an  end to end  best practice workload delivery  based on Horizon template.")),a.createElement("h2",{id:"features"},"Features"),a.createElement("h3",{id:"gitops"},"GitOps"),a.createElement("p",null,"In Horizon, Git is Used as the only \u201cThe Source Of Truth\u201d, Horizon stores template  and all values in Git repository. Every change  are durable, reversible and auditable, Including code, image, environment variables, resource spec, etc."),a.createElement("h3",{id:"horizon-template"},"Horizon Template"),a.createElement("p",null,"Horizon Template is based on helm and jsonschema.  The Platform Team can make the basic practice (including security, affinity, priority, resource, etc.) by default, and provide user a simple and uniform interface which is defined by jsonschema files. jsonschema is used for provide a user friend HTML form on the Horizon Based on react-jsonschema-form.  It\u2019s highly  Scalable and flexible to make your own best practice based on the simple template system."),a.createElement("h3",{id:"rbac--member"},"RBAC & Member"),a.createElement("p",null,"Horizon Provide a  RBAC & Member system  Just like Gitlab. You can easily define your Own PlatForm Member and Role(Just like Kubernetes role and rolebinding). In our Practice, we Provide Role like PE, Owner, Maintainer, Guest. the  Owner is binding with the Read(list pods, read all properties, etc.)/Write(deploy, builddeploy, restart, release, delete etc.) Permission, the guest just have the read permission."),a.createElement("h3",{id:"ease-for-integration"},"Ease For Integration"),a.createElement("p",null,"Horizon Provide OpenAPI, AccessToken, Oauth2.0, IDP Connector, Webhooks. It makes easy to d integrate internal system."),a.createElement("h3",{id:"ease-for-use"},"Ease For use"),a.createElement("p",null,"We Also Provide Product Features, Like Template Management, Kubernetes Management, Monitoring Management, Environment Management. PlatForm Team can easily set up  through the horizon web ui."),a.createElement("h3",{id:"architecture"},"Architecture"),a.createElement("p",null,a.createElement("img",{src:"/image/horizon-opensource-arch.jpg",alt:"arch"})),a.createElement("h4",{id:"horizon-core"},"Horizon-Core"),a.createElement("p",null,"The Horizon Core Server is the Rest Server which export the OpenAPIs consume by the Web UI, CLI, and other systems. it also provides features like:"),a.createElement("ul",null,a.createElement("li",null,"Kubernetes and environment Management"),a.createElement("li",null,"Template Management"),a.createElement("li",null,"PrivateToken,AccessToken Management"),a.createElement("li",null,"Group,application,cluster management"),a.createElement("li",null,"CI,CD Pipeline Management"),a.createElement("li",null,"WekHook Management"),a.createElement("li",null,"User and Member Management"),a.createElement("li",null,"IDP Management")),a.createElement("h4",{id:"gitlab--argocd"},"Gitlab & ArgoCD"),a.createElement("ul",null,a.createElement("li",null,"Gitlab: Gitlab store all the configs of an application, \u201cThe Only Source Of Truth\u201d of an application."),a.createElement("li",null,"ArgoCD:  ArgoCD is our default  GitOps Engine that sync  Application Workloads from  git repo to Kubernetes.")),a.createElement("h4",{id:"tekton--s3"},"Tekton & S3"),a.createElement("ul",null,a.createElement("li",null,"Tekton: the cloudnative pipeline used for our default ci engine, to auto build images from source."),a.createElement("li",null,"S3: Completed Pipelines are restore to S3, you can use any of S3 Compatible Service like Mino or Aws S3 service  and soon.")),a.createElement("h4",{id:"grafana"},"Grafana:"),a.createElement("p",null,"For convenient, we default integrate monitoring feature into Horizon. Just Config you Source Prometheus, Horizon will automatically retrieve the metric to show the Metric DashBoard on Horizon-Web."),a.createElement("h4",{id:"mysql--redis"},"MySql & Redis"),a.createElement("p",null,"For Store and Cache Basic meta Info, such like  member, user, token, webhook, IDPs and soon."),a.createElement("h2",{id:"faqs"},"FAQs"),a.createElement("h3",{id:"horizon-vs-argocd"},"Horizon vs ArgoCD"),a.createElement("p",null,"ArgoCD is a great tool  for the kubernetes platform team or users that familiar with kubernetes, actually  Horizon use argoCD as the default GitOps engine. But we think it is not very user-friendly for the application developer team. We make Horizon more user-friendly  by  core features like group\u3001member & rbac\u3001 template and so on."),a.createElement("h3",{id:"horizon-vs-openshift"},"Horizon vs OpenShift"),a.createElement("p",null,"We think both Horizon and  Openshift  solve the same problem. They all give you the ability to build\u3001deploy and run applications on kubernetes and cloud.  But they looks  fundamentally  different, this mainly because openshift is more an extension and enhancement of kubernetes, but now horizon is aimed to be a  continues  delivery platform based on kubernetes and cloud."),a.createElement("h2",{id:"horizon-gitops"},"Horizon GitOps"),a.createElement("p",null,"GitOps is a best practice of application delivery,  Horizon Follow GitOps Best Practice. We use Git to make  every change of application stable, reliable, secure, auditable and reversible."),a.createElement("h2",{id:"horizon-usage"},"Horizon Usage"),a.createElement("p",null,"Within NetEase Cloud Music, the platform team delivers a variety of service template to users based on Horizon, including webserver,  serverless (Knative application), middleware etc. 400+  R&D make hundreds of build and deploy based on Horizon every day."),a.createElement("footer",{class:"site-footer"},a.createElement("span",{class:"site-footer-owner"},a.createElement("a",{href:"https://github.com/horizoncd/page"},"page")," is maintained by ",a.createElement("a",{href:"https://github.com/horizoncd"},"horizoncd"),"."),a.createElement("span",{class:"site-footer-credits"},"This page was generated by ",a.createElement("a",{href:"https://pages.github.com"},"GitHub Pages"),"."))))}}}]);