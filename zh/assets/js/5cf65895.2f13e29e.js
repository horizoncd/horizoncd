"use strict";(self.webpackChunkhorizon_docs=self.webpackChunkhorizon_docs||[]).push([[317],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=u(n),m=a,g=s["".concat(p,".").concat(m)]||s[m]||c[m]||i;return n?r.createElement(g,o(o({ref:t},d),{},{components:n})):r.createElement(g,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},2065:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={title:"Trigger",toc_max_heading_level:6},o=void 0,l={unversionedId:"user-guide/common-user/trigger",id:"user-guide/common-user/trigger",title:"Trigger",description:"Horizon provides a trigger mechanism to trigger a pipeline when a specified event occurs. Now we support Github Action and Gitlab CI/CD.",source:"@site/docs/user-guide/common-user/trigger.md",sourceDirName:"user-guide/common-user",slug:"/user-guide/common-user/trigger",permalink:"/zh/docs/user-guide/common-user/trigger",draft:!1,editUrl:"https://github.com/horizoncd/horizoncd.github.io/blob/master/docs/docs/user-guide/common-user/trigger.md",tags:[],version:"current",lastUpdatedBy:"Kiloson",lastUpdatedAt:1689233037,formattedLastUpdatedAt:"2023\u5e747\u670813\u65e5",frontMatter:{title:"Trigger",toc_max_heading_level:6},sidebar:"docs",previous:{title:"Deploy and Manage Pods",permalink:"/zh/docs/user-guide/common-user/deploy-and-pod-management"},next:{title:"Monitor",permalink:"/zh/docs/user-guide/common-user/monitor"}},p={},u=[{value:"Github Action",id:"github-action",level:2},{value:"Gitlab CI/CD",id:"gitlab-cicd",level:2},{value:"Varaibles",id:"varaibles",level:2}],d={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Horizon provides a trigger mechanism to trigger a pipeline when a specified event occurs. Now we support Github Action and Gitlab CI/CD."),(0,a.kt)("h2",{id:"github-action"},"Github Action"),(0,a.kt)("p",null,"We provide an ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/horizoncd/actions"},"action"),", and you could just use it in your workflow file."),(0,a.kt)("p",null,"Below is an example of a workflow file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Deploy to Horizon\n\non:\n  push:\n    branches: [ \"main\" ]\n\njobs:\n\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    \n    - uses: horizoncd/actions@v1\n      with:\n        token: {{ secrets.HORIZON_TOKEN }}\n        addr: {{ secrets.HORIZON_ADDR }}\n        deployMethod: buildDeploy\n        title: 'deployment from github'\n        instanceID: 61851\n        gitRefType: commit\n        ref: ${{ github.sha }}\n")),(0,a.kt)("p",null,"This action will trigger a pipeline to deploy your commit when a push event occurs on the main branch."),(0,a.kt)("h2",{id:"gitlab-cicd"},"Gitlab CI/CD"),(0,a.kt)("p",null,"We provide a cli tool ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/horizoncd?activeTab=readme"},"horizoncd"),", and you could just use it in your gitlab-ci.yml file, but it requires nodejs environment."),(0,a.kt)("p",null,"Below is an example of a gitlab-ci.yml file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"stages:\n  - deploy\n\nbuild:\n  stage: deploy\n  script:\n    - npm install horizoncd npx\n    - npx horizoncd \\\n        -a $HORIZON_ADDR \\\n        -t $HORIZON_TOKEN \\\n        -c 61862 \\\n        --title 'deploy from gitlab' \\\n        -m builddeploy \\\n        -r $CI_COMMIT_SHA\n\n  variables:\n    HORIZON_ADDR: $HORIZON_ADDR\n    HORIZON_TOKEN: $HORIZON_TOKEN\n")),(0,a.kt)("h2",{id:"varaibles"},"Varaibles"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"token"),(0,a.kt)("td",{parentName:"tr",align:null},"Horizon token with instance-write permissions for horizon"),(0,a.kt)("td",{parentName:"tr",align:null},"true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"addr"),(0,a.kt)("td",{parentName:"tr",align:null},"Address of Horizon instance"),(0,a.kt)("td",{parentName:"tr",align:null},"true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"title"),(0,a.kt)("td",{parentName:"tr",align:null},"Pipeline title"),(0,a.kt)("td",{parentName:"tr",align:null},"true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"description"),(0,a.kt)("td",{parentName:"tr",align:null},"Pipeline description"),(0,a.kt)("td",{parentName:"tr",align:null},"false")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"instanceID"),(0,a.kt)("td",{parentName:"tr",align:null},"Application instance ID"),(0,a.kt)("td",{parentName:"tr",align:null},"true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"deployMethod"),(0,a.kt)("td",{parentName:"tr",align:null},"buildDeploy or imageDeploy, method to deploy the app"),(0,a.kt)("td",{parentName:"tr",align:null},"true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"gitRefType"),(0,a.kt)("td",{parentName:"tr",align:null},'branch, tag or commit only, required if deployMethod is "buildDeploy"'),(0,a.kt)("td",{parentName:"tr",align:null},"false")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ref"),(0,a.kt)("td",{parentName:"tr",align:null},"Git ref, tag, branch or commit id"),(0,a.kt)("td",{parentName:"tr",align:null},"false")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"tag"),(0,a.kt)("td",{parentName:"tr",align:null},'tag of the image which are going to be deployed, required if deployMethod is "imageDeploy"'),(0,a.kt)("td",{parentName:"tr",align:null},"false")))))}c.isMDXComponent=!0}}]);